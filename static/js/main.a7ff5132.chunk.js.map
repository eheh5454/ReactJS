{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","src","alt","style","backgroundColor","slice","map","genre","index","App","props","getMovies","a","axios","get","movies","data","console","log","setState","isLoading","state","count","add","current","minus","this","movie","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAgCeA,MA1Bf,YAAqD,EAArCC,GAAsC,IAAnCC,EAAkC,EAAlCA,KAAKC,EAA6B,EAA7BA,MAAMC,EAAuB,EAAvBA,QAAQC,EAAe,EAAfA,OAAOC,EAAQ,EAARA,OACzC,OACA,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAeG,MAAO,CAACC,gBAAiB,WAAtD,SAAmER,IACnE,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAGK,UAAU,iBAAb,UAA+BH,EAAQQ,MAAM,EAAG,KAAhD,SACA,oBAAIL,UAAU,eAAd,SACKD,EAAOO,KAAI,SAACC,EAAMC,GAAP,OACX,oBAAgBR,UAAU,eAA1B,SAA0CO,GAAjCC,eC2DXC,G,wDAnEb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAKRC,UANkB,sBAMN,8BAAAC,EAAA,sEAC4BC,IAAMC,IAAI,6CADtC,gBACUC,EADV,EACHC,KAAOA,KAAMD,OACpBE,QAAQC,IAAIH,GACZ,EAAKI,SAAS,CAACJ,SAAQK,WAAU,IAHvB,2CANM,EA2BlBC,MAAQ,CACNC,MAAO,EACPF,WAAW,EACXL,OAAQ,IA9BQ,EAmClBQ,IAAM,WACJ,EAAKJ,UAAS,SAAAK,GAAO,MAAI,CAACF,MAAOE,EAAQF,MAAQ,MACjDL,QAAQC,IAAI,QArCI,EAwClBO,MAAQ,WACN,EAAKN,UAAS,SAAAK,GAAO,MAAK,CAACF,MAAOE,EAAQF,MAAQ,MAClDL,QAAQC,IAAI,UAxCZD,QAAQC,IAAI,SAFI,E,qDAalB,WACEQ,KAAKf,c,gCAIP,WACEM,QAAQC,IAAI,gB,kCAId,WACED,QAAQC,IAAI,uB,oBAqBd,WACE,MAA4BQ,KAAKL,MAA1BD,EAAP,EAAOA,UAAWL,EAAlB,EAAkBA,OAClB,OACE,yBAASf,UAAU,YAAnB,SACGoB,EACD,qBAAKpB,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGA,qBAAKA,UAAU,SAAf,SACCe,EAAOT,KAAI,SAAAqB,GAAK,OACf,cAAC,EAAD,CAAsBjC,GAAIiC,EAAMjC,GAAIC,KAAMgC,EAAMhC,KAAMC,MAAO+B,EAAM/B,MAAOC,QAAS8B,EAAM9B,QACzFC,OAAQ6B,EAAMC,mBAAoB7B,OAAQ4B,EAAM5B,QADpC4B,EAAMjC,e,GA1DZmC,IAAMC,YCCxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a7ff5132.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\"\r\n\r\n// prop들은 {}로 감싸주어야함!\r\n// alt는 사진에 마우스를 올렸을 때 나오는 이름 \r\nfunction Movie({id,year,title,summary,poster,genres}){\r\n    return (\r\n    <div className=\"movie\"> \r\n        <img src={poster} alt={title} title={title} /> \r\n        <div className=\"movie__data\">\r\n            <h3 className=\"movie__title\" style={{backgroundColor: \"#BAD4EC\"}}>{title}</h3>\r\n            <h5 className=\"movie__year\">{year}</h5>\r\n            <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\r\n            <ul className=\"movie__genre\">\r\n                {genres.map((genre,index) => (\r\n                 <li key={index} className=\"genres_genre\">{genre}</li>))}\r\n            </ul>\r\n        </div> \r\n    </div>\r\n    )\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\n\r\nexport default Movie;","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\"\n\n// App 클래스는 React 컴포넌트에서 확장한 것(그래서 렌더 메소드가 기본으로 있다.)\nclass App extends React.Component{\n  // render 전에 호출 \n  constructor(props){\n    super(props);\n    console.log(\"hello\");\n  }\n\n  // 비동기로 영화 정보를 가져옴\n  getMovies = async() => {\n    const {data: {data:{movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n    console.log(movies);\n    this.setState({movies, isLoading:false});\n  }\n\n  // render 후에 호출 \n  componentDidMount(){\n    this.getMovies();\n  } \n\n  // setState가 호출되어 업데이트가 끝난 후 실행 \n  componentDidUpdate() {\n    console.log(\"Did Update\");\n  }\n\n  // 컴포넌트가 죽을 때(페이지를 나감)\n  componentWillUnmount() {\n    console.log(\"component Unmount\");\n  }\n\n  state = {\n    count: 0,\n    isLoading: true,\n    movies: []\n  };\n\n  // setState를 써야 렌더가 호출된다!!\n  // 펑션 방식으로 현재 스테이트의 카운트를 가져올 수 있음(this.state 안쓰고)\n  add = () => {\n    this.setState(current =>({count: current.count + 1}));\n    console.log(\"add\");\n  };\n\n  minus = () => {\n    this.setState(current => ({count: current.count - 1}));\n    console.log(\"minus\");\n  }\n\n  render(){\n    const {isLoading, movies} = this.state;\n    return (\n      <section className=\"container\">   \n        {isLoading ?(\n        <div className=\"loader\">\n          <span className=\"loader__text\">Loading...</span>\n        </div> \n        ): (\n          <div className=\"movies\">\n          {movies.map(movie => (          \n            <Movie key={movie.id} id={movie.id} year={movie.year} title={movie.title} summary={movie.summary} \n            poster={movie.medium_cover_image} genres={movie.genres} />\n          ))}\n          </div>\n        )}\n        \n      </section>       \n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n// 여기서 모든 요소를 그린다.\n// 렌더에는 하나의 js만 들어갈 수있다!!\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n); "],"sourceRoot":""}